#!/usr/local/bin/bash
OFILE=/usr/local/etc/dnsmasq.more.conf
TMPFILE=/usr/local/etc/dnsmasq.more.conf.tmp
WORKFILE=/usr/local/etc/dnsmasq.more.conf.chk

if [ $# -eq 0 ]; then
cp ${OFILE} ${OFILE}.bak
wc -l ${OFILE}*
>$OFILE
>$TMPFILE
counter=1
echo "grabbing blocklists ..."
while read line; do
  pattern=$(echo $line | cut -f 1 -d "|")
  url=$(echo $line | cut -f 2 -d "|")
  #echo "curl $url | sed $pattern"
  if [ x$pattern == "xNXDOMAIN" ];then
    continue
  fi

  echo "### $url" >>${TMPFILE}
  if [ x$pattern == "xcsv" ];then
    curl -s $url | cut -d ',' -f 3 | sed -E '{s#"#address=/#;s#"$#/127.0.0.1#;}' >>$TMPFILE
  elif [ x$pattern == "xpipes" ];then
    curl -s $url | cut -d ',' -f 3 | sed -E '{s#^\|\|#address=/#;s#\^$#/127.0.0.1#;}' >>$TMPFILE
  else
    #curl -s $url | sed -E '{/^#/d;/^$/d;s#'"$pattern"'#address=/#;s%#.*$%%;s#/([^/]*).*$#/\1#;s#[[:space:]]##g;s#$#/127.0.0.1#;}' >>$TMPFILE
    curl -s $url | grep $pattern | sed -E '{/^#/d;/^$/d;s#'"$pattern"'#address=/#;s%#.*$%%;s#(/[^/]*).*$#\1#;s#[[:space:]]##g;s#$#/127.0.0.1#;}' >>$TMPFILE
  fi
  #if [ $counter -eq $1 ];then
  #  exit 1
  #fi
  counter=$(expr $counter + 1)
done <blocklists
fi

# ... sanitize
echo "sanitizing ..."
#sed -i.b4clean '{/^address=\/\/127.0.0.1$/d;}' $TMPFILE
#sed -E -i.b4sanitize '/address=\/([0-9]{1,3}\.?){4}\//d' $TMPFILE
#sed -E -i.b4sani'/address=\/[^\.]*127.0.0.1$/d' $TMPFILE
#sed -E -i.b4sanitize '/address=\/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\//d' $TMPFILE

# ... trying to speed up sanitizing ...

pushd /tmp/shm

split -l100000 $TMPFILE

i=0
for myfile in $(ls -1 x*); do
  sed -n '/^address=\//p' $myfile | sed -n '/127.0.0.1$/!d;p' | sed -n '/address=\/[^\.]*127.0.0.1$/d;p' > $myfile.hlthy &
  #sed -En '/^address=\//p' $myfile | sed -En '/address=\/[^\.]*127.0.0.1$/d;p' | sed -En '/address=\/[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\//d;p' > $myfile.hlthy &
  pids[${i}]=$!
  if [ ${#pids[@]} -eq 4 ]; then
    # wait for all pids
    for pid in ${pids[*]}; do
        wait $pid
    done
    unset pids
    i=-1
  fi
  i=$((i+1))
done

cat *.hlthy > $WORKFILE
rm x*

popd

# ... unique entries
echo "removing dups ..."
sort -u -o ${OFILE} ${WORKFILE}

# ... apply whitelist
echo "whitelisting ..."
while read line; do
  sed -i.b4whitelist '{/^address=\/'"$line"'\//d;}' $OFILE
done <whitelist

wc -l ${OFILE}*

